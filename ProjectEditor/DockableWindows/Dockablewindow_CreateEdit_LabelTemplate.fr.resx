<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>132, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Libelé (ex.: NFg, Tv, R, ...)</value>
  </data>
  <data name="grp_NewLabelTemplate.Text" xml:space="preserve">
    <value>Ajout d'un nouveau modèle de libelé</value>
  </data>
  <data name="checkBox_Overprint.Size" type="System.Drawing.Size, System.Drawing">
    <value>131, 17</value>
  </data>
  <data name="checkBox_Overprint.Text" xml:space="preserve">
    <value>Est-ce un "overprint"?</value>
  </data>
  <data name="pct_MapUnitColor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>101, 13</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Symbole (Optionnel)</value>
  </data>
  <data name="btn_AddLabel.Text" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="$this.Size" type="System.Drawing.Size, System.Drawing">
    <value>353, 311</value>
  </data>
</root>